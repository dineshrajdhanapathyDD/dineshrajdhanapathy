const validationRules={name:{required: true,minLength: 2,maxLength: 50,pattern:/^[a-zA-Z\s'-]+$/,message: 'Name must be 2-50 characters and contain only letters,spaces,hyphens,and apostrophes'},email:{required: true,pattern:/^[^\s@]+@[^\s@]+\.[^\s@]+$/,message: 'Please enter a valid email address'},subject:{required: false,maxLength: 100,message: 'Subject must be less than 100 characters'},message:{required: true,minLength: 10,maxLength: 1000,message: 'Message must be between 10 and 1000 characters'}};let formState={isValid: false,fields:{},isSubmitting: false};function initContactForm(){const form=document.getElementById('contact-form');if(!form)return;initFormFields();addFormEventListeners();initFormAccessibility();initFormAnalytics()}function initFormFields(){const fields=['name','email','subject','message'];fields.forEach(fieldName=>{const field=document.getElementById(fieldName);if(!field)return;formState.fields[fieldName]={value: '',isValid:!validationRules[fieldName].required,isDirty: false,errors: []};addFieldValidation(field,fieldName);enhanceFieldAccessibility(field,fieldName)})}function addFieldValidation(field,fieldName){const errorElement=document.getElementById(`${fieldName}-error`);field.addEventListener('input',function(){const value=field.value.trim();formState.fields[fieldName].value=value;formState.fields[fieldName].isDirty=true;const validation=validateField(fieldName,value);formState.fields[fieldName].isValid=validation.isValid;formState.fields[fieldName].errors=validation.errors;updateFieldUI(field,fieldName,validation);updateFormState()});field.addEventListener('blur',function(){if(formState.fields[fieldName].isDirty){const value=field.value.trim();const validation=validateField(fieldName,value);updateFieldUI(field,fieldName,validation)}});field.addEventListener('focus',function(){if(errorElement){errorElement.textContent='';field.classList.remove('form__input--error');field.setAttribute('aria-invalid','false')}})}function validateField(fieldName,value){const rules=validationRules[fieldName];const errors=[];let isValid=true;if(rules.required&&!value){errors.push(`${capitalizeFirst(fieldName)}is required`);isValid=false}if(!value&&!rules.required){return{isValid: true,errors: []}}if(rules.minLength&&value.length<rules.minLength){errors.push(`${capitalizeFirst(fieldName)}must be at least ${rules.minLength}characters`);isValid=false}if(rules.maxLength&&value.length>rules.maxLength){errors.push(`${capitalizeFirst(fieldName)}must be less than ${rules.maxLength}characters`);isValid=false}if(rules.pattern&&!rules.pattern.test(value)){errors.push(rules.message);isValid=false}return{isValid,errors}}function updateFieldUI(field,fieldName,validation){const errorElement=document.getElementById(`${fieldName}-error`);if(validation.isValid){field.classList.remove('form__input--error');field.classList.add('form__input--valid');field.setAttribute('aria-invalid','false');if(errorElement)errorElement.textContent=''}else{field.classList.add('form__input--error');field.classList.remove('form__input--valid');field.setAttribute('aria-invalid','true');if(errorElement){errorElement.textContent=validation.errors[0];announceToScreenReader(`Error in ${fieldName}: ${validation.errors[0]}`)}}}function addFormEventListeners(){const form=document.getElementById('contact-form');const submitButton=document.getElementById('submit-btn');form.addEventListener('submit',handleFormSubmission);submitButton.addEventListener('click',function(event){if(formState.isSubmitting){event.preventDefault();return false}});form.addEventListener('input',debounce(saveFormData,1000));loadSavedFormData()}async function handleFormSubmission(event){event.preventDefault();if(formState.isSubmitting)return;const isFormValid=validateEntireForm();if(!isFormValid){focusFirstInvalidField();announceToScreenReader('Please correct the errors in the form');return}setSubmittingState(true);try{const formData=prepareFormData();await submitToFormspree(formData);showSuccessMessage();clearForm();clearSavedFormData();trackFormSubmission('success')}catch(error){console.error('Form submission error:',error);showErrorMessage(error.message);trackFormSubmission('error',error.message)}finally{setSubmittingState(false)}}function validateEntireForm(){let isValid=true;Object.keys(formState.fields).forEach(fieldName=>{const field=document.getElementById(fieldName);if(!field)return;const value=field.value.trim();const validation=validateField(fieldName,value);formState.fields[fieldName].isValid=validation.isValid;formState.fields[fieldName].errors=validation.errors;formState.fields[fieldName].isDirty=true;updateFieldUI(field,fieldName,validation);if(!validation.isValid){isValid=false}});updateFormState();return isValid}function updateFormState(){const allFieldsValid=Object.values(formState.fields).every(field=>field.isValid);formState.isValid=allFieldsValid;const submitButton=document.getElementById('submit-btn');if(submitButton){submitButton.disabled=!allFieldsValid||formState.isSubmitting;submitButton.classList.toggle('btn--disabled',!allFieldsValid)}}function setSubmittingState(isSubmitting){formState.isSubmitting=isSubmitting;const form=document.getElementById('contact-form');const submitButton=document.getElementById('submit-btn');const buttonText=submitButton.querySelector('.btn__text');const buttonLoading=submitButton.querySelector('.btn__loading');if(isSubmitting){form.classList.add('form--submitting');submitButton.disabled=true;submitButton.classList.add('btn--loading');if(buttonText)buttonText.style.display='none';if(buttonLoading)buttonLoading.style.display='inline';const fields=form.querySelectorAll('input,textarea');fields.forEach(field=>field.disabled=true)}else{form.classList.remove('form--submitting');submitButton.disabled=false;submitButton.classList.remove('btn--loading');if(buttonText)buttonText.style.display='inline';if(buttonLoading)buttonLoading.style.display='none';const fields=form.querySelectorAll('input,textarea');fields.forEach(field=>field.disabled=false)}}function prepareFormData(){const form=document.getElementById('contact-form');const formData={};const fields=['name','email','subject','message'];fields.forEach(fieldName=>{const field=document.getElementById(fieldName);if(field){formData[fieldName]=field.value.trim()}});formData._subject=`New contact from ${formData.name||'Portfolio Website'}`;formData._replyto=formData.email;formData._format='plain';formData.timestamp=new Date().toISOString();formData.userAgent=navigator.userAgent;formData.referrer=document.referrer||'Direct';return formData}async function submitToFormspree(formData){const form=document.getElementById('contact-form');const formspreeUrl=form.action;if(!formspreeUrl||formspreeUrl.includes('YOUR_FORM_ID')){throw new Error('Formspree is not configured. Please update the form action URL with your Formspree form ID.')}try{const response=await fetch(formspreeUrl,{method: 'POST',headers:{'Accept': 'application/json','Content-Type': 'application/json'},body: JSON.stringify(formData)});if(!response.ok){const errorData=await response.json().catch(()=>({}));if(response.status===422){throw new Error('Please check your form data and try again.')}else if(response.status===429){throw new Error('Too many requests. Please wait a moment and try again.')}else if(response.status>=500){throw new Error('Server error. Please try again later.')}else{throw new Error(errorData.error||'Failed to send message. Please try again.')}}const result=await response.json();return result}catch(error){if(error.name==='TypeError'&&error.message.includes('fetch')){throw new Error('Network error. Please check your connection and try again.')}throw error}}function showSuccessMessage(){const successMessage=document.getElementById('success-message');const errorMessage=document.getElementById('error-message');const form=document.getElementById('contact-form');if(successMessage){successMessage.style.display='block';successMessage.scrollIntoView({behavior: 'smooth',block: 'center'});announceToScreenReader('Message sent successfully!')}if(errorMessage){errorMessage.style.display='none'}if(form){form.style.display='none'}setTimeout(()=>{if(form)form.style.display='block';if(successMessage)successMessage.style.display='none'},5000)}function showErrorMessage(message){const errorMessage=document.getElementById('error-message');const successMessage=document.getElementById('success-message');if(errorMessage){const errorText=errorMessage.querySelector('p');if(errorText){errorText.textContent=message||'Something went wrong. Please try again.'}errorMessage.style.display='block';errorMessage.scrollIntoView({behavior: 'smooth',block: 'center'});announceToScreenReader(`Error: ${message}`)}if(successMessage){successMessage.style.display='none'}}function clearForm(){const form=document.getElementById('contact-form');if(form){form.reset();Object.keys(formState.fields).forEach(fieldName=>{formState.fields[fieldName]={value: '',isValid:!validationRules[fieldName].required,isDirty: false,errors: []};const field=document.getElementById(fieldName);if(field){field.classList.remove('form__input--valid','form__input--error');field.setAttribute('aria-invalid','false')}const errorElement=document.getElementById(`${fieldName}-error`);if(errorElement){errorElement.textContent=''}});updateFormState()}}function focusFirstInvalidField(){const firstInvalidField=Object.keys(formState.fields).find(fieldName=>!formState.fields[fieldName].isValid&&formState.fields[fieldName].isDirty);if(firstInvalidField){const field=document.getElementById(firstInvalidField);if(field){field.focus();field.scrollIntoView({behavior: 'smooth',block: 'center'})}}}function saveFormData(){const formData={};Object.keys(formState.fields).forEach(fieldName=>{const field=document.getElementById(fieldName);if(field){formData[fieldName]=field.value}});try{localStorage.setItem('contactFormData',JSON.stringify(formData))}catch(error){console.warn('Could not save form data:',error)}}function loadSavedFormData(){try{const savedData=localStorage.getItem('contactFormData');if(savedData){const formData=JSON.parse(savedData);Object.keys(formData).forEach(fieldName=>{const field=document.getElementById(fieldName);if(field&&formData[fieldName]){field.value=formData[fieldName];field.dispatchEvent(new Event('input'))}})}}catch(error){console.warn('Could not load saved form data:',error)}}function clearSavedFormData(){try{localStorage.removeItem('contactFormData')}catch(error){console.warn('Could not clear saved form data:',error)}}function initFormAccessibility(){const form=document.getElementById('contact-form');if(form){const description=document.createElement('div');description.id='form-description';description.className='sr-only';description.textContent='Contact form with real-time validation. Required fields are marked with an asterisk.';form.insertBefore(description,form.firstChild);form.setAttribute('aria-describedby','form-description')}Object.keys(validationRules).forEach(fieldName=>{enhanceFieldAccessibility(document.getElementById(fieldName),fieldName)})}function enhanceFieldAccessibility(field,fieldName){if(!field)return;const rules=validationRules[fieldName];const label=document.querySelector(`label[for="${fieldName}"]`);if(rules.required&&label){if(!label.textContent.includes('*')){label.innerHTML+='<span class="required-indicator" aria-label="required">*</span>'}}if(rules.maxLength){addCharacterCounter(field,fieldName,rules.maxLength)}field.setAttribute('aria-required',rules.required.toString());field.setAttribute('aria-invalid','false');if(rules.maxLength){field.setAttribute('maxlength',rules.maxLength.toString())}}function addCharacterCounter(field,fieldName,maxLength){const counter=document.createElement('div');counter.id=`${fieldName}-counter`;counter.className='form__counter';counter.setAttribute('aria-live','polite');const updateCounter=()=>{const remaining=maxLength-field.value.length;counter.textContent=`${remaining}characters remaining`;counter.classList.toggle('form__counter--warning',remaining<50)};field.addEventListener('input',updateCounter);updateCounter();field.parentNode.appendChild(counter);field.setAttribute('aria-describedby',`${fieldName}-counter`)}function initFormAnalytics(){const form=document.getElementById('contact-form');if(form){let formStarted=false;form.addEventListener('input',function(){if(!formStarted){trackFormEvent('form_started');formStarted=true}});Object.keys(validationRules).forEach(fieldName=>{const field=document.getElementById(fieldName);if(field){field.addEventListener('focus',()=>trackFormEvent('field_focused',fieldName));field.addEventListener('blur',()=>{if(field.value.trim()){trackFormEvent('field_completed',fieldName)}})}})}}function trackFormEvent(eventName,fieldName=null){if(typeof gtag!=='undefined'){gtag('event',eventName,{'form_name': 'contact_form','field_name': fieldName})}console.log(`Form event: ${eventName}${fieldName ? `-${fieldName}` : ''}`)}function trackFormSubmission(status,error=null){trackFormEvent('form_submitted',status);if(error){console.error('Form submission error:',error)}}function announceToScreenReader(message){const announcement=document.createElement('div');announcement.setAttribute('aria-live','assertive');announcement.setAttribute('aria-atomic','true');announcement.className='sr-only';announcement.textContent=message;document.body.appendChild(announcement);setTimeout(()=>{document.body.removeChild(announcement)},1000)}function capitalizeFirst(str){return str.charAt(0).toUpperCase()+str.slice(1)}function debounce(func,wait){let timeout;return function executedFunction(...args){const later=()=>{clearTimeout(timeout);func(...args)};clearTimeout(timeout);timeout=setTimeout(later,wait)}}document.addEventListener('DOMContentLoaded',function(){initContactForm()});window.ContactModule={initContactForm,validateField,clearForm,trackFormEvent};function isFormspreeConfigured(){const form=document.getElementById('contact-form');const formspreeUrl=form?.action;return formspreeUrl&&!formspreeUrl.includes('YOUR_FORM_ID')&&formspreeUrl.includes('formspree.io')}function showConfigurationWarning(){if(!isFormspreeConfigured()){const warningDiv=document.createElement('div');warningDiv.className='form__message form__message--warning';warningDiv.innerHTML=`<h3>Configuration Required</h3><p>To enable form submissions,please configure your Formspree form ID in the contact form action URL.</p><p><strong>Steps:</strong></p><ol><li>Sign up at<a href="https://formspree.io" target="_blank" rel="noopener">formspree.io</a></li><li>Create a new form and get your form ID</li><li>Replace "YOUR_FORM_ID" in the form action URL with your actual form ID</li></ol>`;const form=document.getElementById('contact-form');if(form){form.parentNode.insertBefore(warningDiv,form)}}}function addFallbackSubmission(){if(!isFormspreeConfigured()){const originalSubmit=handleFormSubmission;window.handleFormSubmission=async function(event){event.preventDefault();const isFormValid=validateEntireForm();if(!isFormValid){focusFirstInvalidField();announceToScreenReader('Please correct the errors in the form');return}showErrorMessage('Form submission is not configured. Please set up Formspree to enable contact form functionality.')}}}function addRetryFunctionality(){let retryButton=null;window.retryFormSubmission=async function(){if(retryButton){retryButton.disabled=true;retryButton.textContent='Retrying...'}try{const isFormValid=validateEntireForm();if(isFormValid){setSubmittingState(true);const formData=prepareFormData();await submitToFormspree(formData);showSuccessMessage();clearForm();clearSavedFormData();trackFormSubmission('retry_success');if(retryButton){retryButton.remove();retryButton=null}}}catch(error){showErrorMessage(error.message);trackFormSubmission('retry_failed',error.message)}finally{setSubmittingState(false);if(retryButton){retryButton.disabled=false;retryButton.textContent='Try Again'}}};const originalShowError=showErrorMessage;window.showErrorMessage=function(message){originalShowError(message);const errorMessage=document.getElementById('error-message');if(errorMessage&&!retryButton){retryButton=document.createElement('button');retryButton.type='button';retryButton.className='btn btn--secondary';retryButton.textContent='Try Again';retryButton.onclick=window.retryFormSubmission;retryButton.style.marginTop='var(--space-md)';errorMessage.appendChild(retryButton)}}}function enhanceFormAnalytics(){let formInteracted=false;let abandonmentTimer=null;const form=document.getElementById('contact-form');if(form){form.addEventListener('input',function(){if(!formInteracted){formInteracted=true;abandonmentTimer=setTimeout(()=>{if(formInteracted&&!formState.isSubmitting){trackFormEvent('form_abandoned')}},300000)}});const originalSuccess=showSuccessMessage;window.showSuccessMessage=function(){if(abandonmentTimer){clearTimeout(abandonmentTimer)}originalSuccess()}}const originalUpdateFieldUI=updateFieldUI;window.updateFieldUI=function(field,fieldName,validation){originalUpdateFieldUI(field,fieldName,validation);if(!validation.isValid&&validation.errors.length>0){trackFormEvent('validation_error',`${fieldName}: ${validation.errors[0]}`)}}}function addProgressiveEnhancements(){addFormProgressIndicator();addFormSuggestions();addFormKeyboardShortcuts()}function addFormProgressIndicator(){const form=document.getElementById('contact-form');if(!form)return;const progressBar=document.createElement('div');progressBar.className='form__progress';progressBar.innerHTML=`<div class="form__progress-bar" id="form-progress-bar"></div><span class="form__progress-text" id="form-progress-text">0% Complete</span>`;form.insertBefore(progressBar,form.firstChild);function updateProgress(){const fields=['name','email','message'];const filledFields=fields.filter(fieldName=>{const field=document.getElementById(fieldName);return field&&field.value.trim()&&formState.fields[fieldName]?.isValid});const progress=Math.round((filledFields.length/fields.length)*100);const progressBarElement=document.getElementById('form-progress-bar');const progressTextElement=document.getElementById('form-progress-text');if(progressBarElement){progressBarElement.style.width=`${progress}%`}if(progressTextElement){progressTextElement.textContent=`${progress}% Complete`}}form.addEventListener('input',debounce(updateProgress,300))}function addFormSuggestions(){const emailField=document.getElementById('email');if(!emailField)return;const commonDomains=['gmail.com','yahoo.com','hotmail.com','outlook.com','icloud.com'];emailField.addEventListener('blur',function(){const email=emailField.value.trim();if(!email.includes('@'))return;const [localPart,domain]=email.split('@');if(!domain)return;const suggestions=commonDomains.filter(commonDomain=>{return commonDomain.startsWith(domain.toLowerCase())&&commonDomain!==domain.toLowerCase()});if(suggestions.length>0){showEmailSuggestion(localPart,suggestions[0])}})}function showEmailSuggestion(localPart,suggestedDomain){const emailField=document.getElementById('email');if(!emailField)return;const existingSuggestion=document.getElementById('email-suggestion');if(existingSuggestion){existingSuggestion.remove()}const suggestion=document.createElement('div');suggestion.id='email-suggestion';suggestion.className='form__suggestion';suggestion.innerHTML=` Did you mean<button type="button" class="form__suggestion-link">${localPart}@${suggestedDomain}</button>? `;const suggestionButton=suggestion.querySelector('.form__suggestion-link');suggestionButton.addEventListener('click',function(){emailField.value=`${localPart}@${suggestedDomain}`;emailField.dispatchEvent(new Event('input'));suggestion.remove()});emailField.parentNode.appendChild(suggestion);setTimeout(()=>{if(suggestion.parentNode){suggestion.remove()}},10000)}function addFormKeyboardShortcuts(){document.addEventListener('keydown',function(event){const form=document.getElementById('contact-form');if(!form||!form.contains(event.target))return;if((event.ctrlKey||event.metaKey)&&event.key==='Enter'){event.preventDefault();const submitButton=document.getElementById('submit-btn');if(submitButton&&!submitButton.disabled){submitButton.click()}}if(event.key==='Escape'&&event.target.tagName==='INPUT'||event.target.tagName==='TEXTAREA'){event.target.value='';event.target.dispatchEvent(new Event('input'))}})}function initEnhancedContactForm(){initContactForm();showConfigurationWarning();addFallbackSubmission();addRetryFunctionality();enhanceFormAnalytics();addProgressiveEnhancements();addFormTips()}function addFormTips(){const tips=[ 'Use Ctrl/Cmd+Enter to quickly submit the form','Your form data is automatically saved as you type','All fields are validated in real-time for your convenience' ];const tipsContainer=document.createElement('div');tipsContainer.className='form__tips';tipsContainer.innerHTML=`<h4>💡 Tips:</h4><ul>${tips.map(tip=>`<li>${tip}</li>`).join('')}</ul>`;const form=document.getElementById('contact-form');if(form){form.parentNode.appendChild(tipsContainer)}}document.addEventListener('DOMContentLoaded',function(){initEnhancedContactForm()});window.ContactModule={...window.ContactModule,initEnhancedContactForm,isFormspreeConfigured,retryFormSubmission};/***Professional contact links and social media functionality*/function initContactLinks(){trackSocialMediaClicks();initAvailabilityStatus();addCopyEmailFunctionality();initContactAnimations();validateContactLinks()}function trackSocialMediaClicks(){const socialLinks=document.querySelectorAll('.social-links__item');socialLinks.forEach(link=>{link.addEventListener('click',function(event){const platform=getPlatformFromLink(link);const linkType=link.closest('.social-links--secondary')? 'secondary' : 'primary';trackContactEvent('social_link_click',{platform: platform,type: linkType,url: link.href});addClickFeedback(link)})})}function getPlatformFromLink(link){const classList=link.classList;if(classList.contains('social-links__item--linkedin'))return 'linkedin';if(classList.contains('social-links__item--github'))return 'github';if(classList.contains('social-links__item--twitter'))return 'twitter';if(classList.contains('social-links__item--dev'))return 'dev.to';if(classList.contains('social-links__item--stackoverflow'))return 'stackoverflow';if(classList.contains('social-links__item--medium'))return 'medium';return 'unknown'}function addClickFeedback(element){element.style.transform='scale(0.95)';setTimeout(()=>{element.style.transform=''},150)}function initAvailabilityStatus(){const availabilityIndicator=document.querySelector('.availability-indicator');const availabilityText=document.querySelector('.availability-text');if(!availabilityIndicator||!availabilityText)return;updateAvailabilityStatus('available','Available for new projects');const availabilityStatus=document.querySelector('.availability-status');if(availabilityStatus){availabilityStatus.addEventListener('click',showAvailabilityDetails);availabilityStatus.style.cursor='pointer';availabilityStatus.setAttribute('role','button');availabilityStatus.setAttribute('aria-label','Click for availability details')}}function updateAvailabilityStatus(status,text){const indicator=document.querySelector('.availability-indicator');const textElement=document.querySelector('.availability-text');if(!indicator||!textElement)return;indicator.classList.remove('availability-indicator--available','availability-indicator--busy','availability-indicator--unavailable');indicator.classList.add(`availability-indicator--${status}`);textElement.textContent=text;const statusContainer=document.querySelector('.availability-status');if(statusContainer){statusContainer.className='availability-status';statusContainer.classList.add(`availability-status--${status}`)}}function showAvailabilityDetails(){const modal=createAvailabilityModal();document.body.appendChild(modal);const closeButton=modal.querySelector('.modal__close');if(closeButton){closeButton.focus()}trackContactEvent('availability_details_viewed')}function createAvailabilityModal(){const modal=document.createElement('div');modal.className='modal modal--availability';modal.innerHTML=`<div class="modal__backdrop"></div><div class="modal__content"><div class="modal__header"><h3 class="modal__title">Current Availability</h3><button class="modal__close" aria-label="Close availability details">×</button></div><div class="modal__body"><div class="availability-details"><div class="availability-detail"><h4>Project Availability</h4><p>Currently accepting new projects starting in Q2 2025</p></div><div class="availability-detail"><h4>Consultation Calls</h4><p>Available for 30-minute discovery calls within 1-2 weeks</p></div><div class="availability-detail"><h4>Response Times</h4><p>Email responses within 24-48 hours during business days</p></div><div class="availability-detail"><h4>Preferred Contact</h4><p>Email for detailed project discussions,LinkedIn for networking</p></div></div></div></div>`;const closeButton=modal.querySelector('.modal__close');const backdrop=modal.querySelector('.modal__backdrop');const closeModal=()=>{modal.remove();trackContactEvent('availability_modal_closed')};closeButton.addEventListener('click',closeModal);backdrop.addEventListener('click',closeModal);const handleEscape=(event)=>{if(event.key==='Escape'){closeModal();document.removeEventListener('keydown',handleEscape)}};document.addEventListener('keydown',handleEscape);return modal}function addCopyEmailFunctionality(){const emailLink=document.querySelector('.contact__link--email');if(!emailLink)return;const copyButton=document.createElement('button');copyButton.className='email-copy-btn';copyButton.innerHTML='📋';copyButton.setAttribute('aria-label','Copy email address');copyButton.title='Copy email address';emailLink.parentNode.appendChild(copyButton);copyButton.addEventListener('click',async function(event){event.preventDefault();const email=emailLink.href.replace('mailto:','');try{await navigator.clipboard.writeText(email);showCopyFeedback(copyButton,'Copied!');trackContactEvent('email_copied',{email: email})}catch(error){fallbackCopyEmail(email);showCopyFeedback(copyButton,'Copied!');trackContactEvent('email_copied_fallback',{email: email})}})}function fallbackCopyEmail(email){const textArea=document.createElement('textarea');textArea.value=email;textArea.style.position='fixed';textArea.style.left='-999999px';textArea.style.top='-999999px';document.body.appendChild(textArea);textArea.focus();textArea.select();try{document.execCommand('copy')}catch(error){console.warn('Copy fallback failed:',error)}document.body.removeChild(textArea)}function showCopyFeedback(button,message){const originalContent=button.innerHTML;button.innerHTML='✓';button.classList.add('email-copy-btn--success');setTimeout(()=>{button.innerHTML=originalContent;button.classList.remove('email-copy-btn--success')},2000)}function initContactAnimations(){const contactItems=document.querySelectorAll('.contact__item');contactItems.forEach((item,index)=>{item.style.animationDelay=`${index*0.1}s`;item.classList.add('contact-item-animate')});if('IntersectionObserver' in window){const observer=new IntersectionObserver((entries)=>{entries.forEach(entry=>{if(entry.isIntersecting){entry.target.classList.add('contact-item-visible')}})},{threshold: 0.1});contactItems.forEach(item=>observer.observe(item))}else{contactItems.forEach(item=>item.classList.add('contact-item-visible'))}}function validateContactLinks(){const socialLinks=document.querySelectorAll('.social-links__item');socialLinks.forEach(link=>{if(link.href==='#'||link.href.includes('example.com')){link.classList.add('social-links__item--placeholder');link.addEventListener('click',function(event){event.preventDefault();showPlaceholderMessage(link)})}});const emailLink=document.querySelector('.contact__link--email');if(emailLink&&emailLink.href.includes('example.com')){emailLink.classList.add('contact__link--placeholder');emailLink.addEventListener('click',function(event){event.preventDefault();showPlaceholderMessage(emailLink,'Please update the email address in the contact section.')})}}function showPlaceholderMessage(element,customMessage=null){const platform=getPlatformFromLink(element)||'contact method';const message=customMessage||`Please update the ${platform}link in the contact section.`;const tooltip=document.createElement('div');tooltip.className='placeholder-tooltip';tooltip.textContent=message;element.parentNode.appendChild(tooltip);const rect=element.getBoundingClientRect();tooltip.style.position='absolute';tooltip.style.top=`${rect.bottom+10}px`;tooltip.style.left=`${rect.left}px`;tooltip.style.zIndex='1000';setTimeout(()=>{if(tooltip.parentNode){tooltip.parentNode.removeChild(tooltip)}},3000);trackContactEvent('placeholder_link_clicked',{platform: platform})}function trackContactEvent(eventName,data={}){if(typeof gtag!=='undefined'){gtag('event',eventName,{'contact_section': true,...data})}console.log(`Contact event: ${eventName}`,data)}function initEnhancedContactLinks(){initContactLinks();addContactKeyboardShortcuts();initContactLinkHealthCheck()}function addContactKeyboardShortcuts(){document.addEventListener('keydown',function(event){if(event.target.tagName==='INPUT'||event.target.tagName==='TEXTAREA'){return}if((event.ctrlKey||event.metaKey)&&event.key==='e'){event.preventDefault();const copyButton=document.querySelector('.email-copy-btn');if(copyButton){copyButton.click()}}if((event.ctrlKey||event.metaKey)&&event.key==='l'){event.preventDefault();const linkedinLink=document.querySelector('.social-links__item--linkedin');if(linkedinLink&&!linkedinLink.classList.contains('social-links__item--placeholder')){linkedinLink.click()}}})}function initContactLinkHealthCheck(){const socialLinks=document.querySelectorAll('.social-links__item');let placeholderCount=0;socialLinks.forEach(link=>{if(link.classList.contains('social-links__item--placeholder')){placeholderCount++}});if(placeholderCount>0){console.warn(`${placeholderCount}placeholder contact links found. Please update with actual URLs.`);if(window.location.hostname==='localhost'||window.location.hostname==='127.0.0.1'){showDevelopmentNotice(placeholderCount)}}}function showDevelopmentNotice(count){const notice=document.createElement('div');notice.className='dev-notice';notice.innerHTML=`<h4>Development Notice</h4><p>${count}placeholder contact link(s)detected. Update the URLs in contact.html for production.</p><button class="dev-notice__close">×</button>`;document.body.appendChild(notice);const closeButton=notice.querySelector('.dev-notice__close');closeButton.addEventListener('click',()=>notice.remove());setTimeout(()=>{if(notice.parentNode){notice.remove()}},10000)}document.addEventListener('DOMContentLoaded',function(){initEnhancedContactLinks()});window.ContactModule={...window.ContactModule,initEnhancedContactLinks,updateAvailabilityStatus,trackContactEvent};
const projectsData=[{id: "ecommerce-platform",title: "E-Commerce Platform",description: "A full-stack e-commerce solution with modern UI,secure payments,and admin dashboard. Built with React and Node.js,featuring real-time inventory management and analytics.",longDescription: "Comprehensive e-commerce platform designed for small to medium businesses. Features include product catalog management,shopping cart functionality,secure payment processing with Stripe integration,order tracking,and detailed analytics dashboard for business insights.",technologies: ["React","Node.js","Express","MongoDB","Stripe","JWT","CSS3"],githubUrl: "https://github.com/alexjohnson/ecommerce-platform",liveUrl: "https://demo-ecommerce.alexjohnson.dev",imageUrl: "assets/images/projects/ecommerce-platform.jpg",featured: true,dateCreated: "2024-11-15",status: "completed",category: "full-stack"},{id: "task-management-app",title: "Task Management App",description: "Collaborative task management application with real-time updates,team collaboration features,and intuitive drag-and-drop interface.",longDescription: "Modern task management solution built for teams. Features include project boards,task assignments,real-time collaboration,file attachments,time tracking,and comprehensive reporting. Built with Vue.js and Firebase for real-time synchronization.",technologies: ["Vue.js","Firebase","Vuex","CSS3","JavaScript"],githubUrl: "https://github.com/alexjohnson/task-manager",liveUrl: "https://taskflow.alexjohnson.dev",imageUrl: "assets/images/projects/task-management.jpg",featured: true,dateCreated: "2024-09-22",status: "completed",category: "frontend"},{id: "weather-dashboard",title: "Weather Dashboard",description: "Interactive weather dashboard with location-based forecasts,historical data visualization,and customizable widgets.",longDescription: "Comprehensive weather application providing current conditions,7-day forecasts,and historical weather data. Features interactive maps,customizable dashboard widgets,weather alerts,and data visualization charts. Integrates with multiple weather APIs for accurate data.",technologies: ["JavaScript","Chart.js","CSS3","Weather API","Geolocation"],githubUrl: "https://github.com/alexjohnson/weather-dashboard",liveUrl: "https://weather.alexjohnson.dev",imageUrl: "assets/images/projects/weather-dashboard.jpg",featured: false,dateCreated: "2024-08-10",status: "completed",category: "frontend"},{id: "blog-cms",title: "Blog CMS",description: "Content management system for bloggers with markdown support,SEO optimization,and social media integration.",longDescription: "Full-featured blog content management system designed for writers and content creators. Includes markdown editor,SEO optimization tools,social media integration,comment system,analytics dashboard,and multi-author support. Built with modern web technologies for optimal performance.",technologies: ["React","Node.js","PostgreSQL","Markdown","SEO","Express"],githubUrl: "https://github.com/alexjohnson/blog-cms",liveUrl: null,imageUrl: "assets/images/projects/blog-cms.jpg",featured: false,dateCreated: "2024-07-05",status: "completed",category: "full-stack"},{id: "portfolio-website",title: "Portfolio Website",description: "Responsive portfolio website showcasing projects and skills with modern design and smooth animations.",longDescription: "Personal portfolio website built with modern web standards. Features responsive design,smooth animations,project showcase,skills visualization,contact form,and optimized performance. Demonstrates proficiency in HTML5,CSS3,and JavaScript.",technologies: ["HTML5","CSS3","JavaScript","Responsive Design"],githubUrl: "https://github.com/alexjohnson/portfolio",liveUrl: "https://alexjohnson.dev",imageUrl: "assets/images/projects/portfolio-website.jpg",featured: false,dateCreated: "2024-06-20",status: "completed",category: "frontend"},{id: "api-gateway",title: "Microservices API Gateway",description: "Scalable API gateway for microservices architecture with authentication,rate limiting,and monitoring.",longDescription: "Enterprise-grade API gateway solution for microservices architecture. Provides authentication,authorization,rate limiting,request/response transformation,monitoring,and analytics. Built with Node.js and Redis for high performance and scalability.",technologies: ["Node.js","Express","Redis","JWT","Docker","Microservices"],githubUrl: "https://github.com/alexjohnson/api-gateway",liveUrl: null,imageUrl: "assets/images/projects/api-gateway.jpg",featured: true,dateCreated: "2024-10-30",status: "in-progress",category: "backend"},{id: "data-visualization",title: "Data Visualization Dashboard",description: "Interactive data visualization dashboard with real-time charts,filters,and export capabilities.",longDescription: "Advanced data visualization platform for business intelligence. Features interactive charts,real-time data updates,customizable dashboards,advanced filtering,data export capabilities,and responsive design. Built with D3.js and modern web technologies.",technologies: ["D3.js","JavaScript","Python","FastAPI","PostgreSQL","CSS3"],githubUrl: "https://github.com/alexjohnson/data-viz",liveUrl: "https://dataviz.alexjohnson.dev",imageUrl: "assets/images/projects/data-visualization.jpg",featured: false,dateCreated: "2024-05-15",status: "completed",category: "full-stack"},{id: "mobile-app-backend",title: "Mobile App Backend",description: "RESTful API backend for mobile applications with user authentication,push notifications,and cloud storage.",longDescription: "Robust backend service for mobile applications providing user management,authentication,push notifications,file storage,and real-time messaging. Built with scalability and security in mind,featuring comprehensive API documentation and monitoring.",technologies: ["Python","FastAPI","PostgreSQL","Redis","AWS","Docker"],githubUrl: "https://github.com/alexjohnson/mobile-backend",liveUrl: null,imageUrl: "assets/images/projects/mobile-backend.jpg",featured: false,dateCreated: "2024-04-08",status: "completed",category: "backend"}];const technologyCategories={frontend: ["React","Vue.js","JavaScript","HTML5","CSS3","Chart.js","D3.js"],backend: ["Node.js","Python","Express","FastAPI","PHP"],database: ["MongoDB","PostgreSQL","Redis","Firebase"],cloud: ["AWS","Docker","Microservices"],tools: ["Git","Webpack","Jest","Stripe","JWT"]};function initProjects(){const projectsContainer=document.getElementById('projects-container');const filterControls=document.getElementById('filter-controls');const searchInput=document.getElementById('project-search');const noResults=document.getElementById('no-results');if(!projectsContainer)return;renderProjects(projectsData);if(filterControls){initFilterControls(filterControls)}if(searchInput){initSearchFunctionality(searchInput)}initProjectInteractions()}function renderProjects(projects){const container=document.getElementById('projects-container');const noResults=document.getElementById('no-results');if(!container)return;if(projects.length===0){container.innerHTML='';if(noResults)noResults.style.display='block';return}if(noResults)noResults.style.display='none';container.innerHTML=projects.map(project=>createProjectCard(project)).join('');setTimeout(()=>{container.querySelectorAll('.project-card').forEach((card,index)=>{setTimeout(()=>{card.classList.add('project-card--visible')},index*100)})},50)}function createProjectCard(project){const statusBadge=project.status==='in-progress' ? '<span class="project__badge project__badge--progress">In Progress</span>' : '';const featuredBadge=project.featured ? '<span class="project__badge project__badge--featured">Featured</span>' : '';const liveLink=project.liveUrl ? `<a href="${project.liveUrl}" class="project__link project__link--live" target="_blank" rel="noopener noreferrer" aria-label="View ${project.title}live demo"><span class="project__link-text">Live Demo</span><span class="project__link-icon" aria-hidden="true">↗</span></a>` : '';return `<article class="project-card" data-project-id="${project.id}" data-category="${project.category}"><div class="project__image-container"><img src="${project.imageUrl}" alt="${project.title}screenshot" class="project__image" loading="lazy" onerror="this.src='assets/images/projects/placeholder.jpg';this.onerror=null;"><div class="project__badges">${featuredBadge}${statusBadge}</div><div class="project__overlay"><div class="project__overlay-content"><p class="project__long-description">${project.longDescription}</p></div></div></div><div class="project__content"><header class="project__header"><h3 class="project__title">${project.title}</h3><time class="project__date" datetime="${project.dateCreated}">${formatDate(project.dateCreated)}</time></header><p class="project__description">${project.description}</p><div class="project__technologies">${project.technologies.map(tech=>`<span class="project__tech-tag" data-tech="${tech.toLowerCase()}">${tech}</span>`).join('')}</div><footer class="project__footer"><div class="project__links"><a href="${project.githubUrl}" class="project__link project__link--github" target="_blank" rel="noopener noreferrer" aria-label="View ${project.title}source code on GitHub"><span class="project__link-text">GitHub</span><span class="project__link-icon" aria-hidden="true">↗</span></a>${liveLink}</div></footer></div></article>`}function initFilterControls(container){const allTechnologies=[...new Set(projectsData.flatMap(project=>project.technologies))].sort();const filterButtons=allTechnologies.map(tech=>`<button class="filter__btn" data-filter="${tech.toLowerCase()}">${tech}</button>`).join('');const categoryButtons=`<button class="filter__btn" data-filter="frontend">Frontend</button><button class="filter__btn" data-filter="backend">Backend</button><button class="filter__btn" data-filter="full-stack">Full Stack</button>`;container.innerHTML=`<button class="filter__btn filter__btn--active" data-filter="all">All</button>${categoryButtons}<div class="filter__divider"></div>${filterButtons}`;container.addEventListener('click',handleFilterClick)}function handleFilterClick(event){if(!event.target.classList.contains('filter__btn'))return;const filterValue=event.target.dataset.filter;const filterButtons=document.querySelectorAll('.filter__btn');filterButtons.forEach(btn=>btn.classList.remove('filter__btn--active'));event.target.classList.add('filter__btn--active');document.dispatchEvent(new CustomEvent('filterChanged',{detail:{filter: filterValue}}));const filteredProjects=filterProjects(filterValue);renderProjects(filteredProjects);updateResultsCount(filteredProjects.length,projectsData.length);const searchInput=document.getElementById('project-search');if(searchInput&&searchInput.value&&filterValue!=='all'){searchInput.value='';updateSearchState(false)}}function filterProjects(filterValue){if(filterValue==='all'){return projectsData}return projectsData.filter(project=>{if(project.category===filterValue)return true;return project.technologies.some(tech=>tech.toLowerCase()===filterValue.toLowerCase())})}function initSearchFunctionality(searchInput){let searchTimeout;let currentFilter='all';searchInput.addEventListener('input',function(event){clearTimeout(searchTimeout);searchTimeout=setTimeout(()=>{const searchTerm=event.target.value.toLowerCase().trim();let results;if(searchTerm){const baseProjects=currentFilter==='all' ? projectsData : filterProjects(currentFilter);results=searchProjects(searchTerm,baseProjects);updateSearchState(true,searchTerm)}else{results=filterProjects(currentFilter);updateSearchState(false)}renderProjects(results);updateResultsCount(results.length,projectsData.length)},300)});const clearButton=createClearButton(searchInput);searchInput.parentNode.appendChild(clearButton);document.addEventListener('filterChanged',function(event){currentFilter=event.detail.filter;const searchTerm=searchInput.value.toLowerCase().trim();if(searchTerm){const baseProjects=currentFilter==='all' ? projectsData : filterProjects(currentFilter);const results=searchProjects(searchTerm,baseProjects);renderProjects(results);updateResultsCount(results.length,projectsData.length)}})}function searchProjects(searchTerm,baseProjects=projectsData){if(!searchTerm)return baseProjects;return baseProjects.filter(project=>{const searchableText=[ project.title,project.description,project.longDescription,...project.technologies ].join(' ').toLowerCase();return searchableText.includes(searchTerm)})}function createClearButton(searchInput){const clearButton=document.createElement('button');clearButton.type='button';clearButton.className='search__clear';clearButton.innerHTML='×';clearButton.setAttribute('aria-label','Clear search');clearButton.style.display='none';clearButton.addEventListener('click',function(){searchInput.value='';searchInput.dispatchEvent(new Event('input'));searchInput.focus()});searchInput.addEventListener('input',function(){clearButton.style.display=searchInput.value ? 'block' : 'none'});return clearButton}function updateSearchState(isSearching,searchTerm=''){const searchInput=document.getElementById('project-search');const filterControls=document.getElementById('filter-controls');if(isSearching){searchInput.classList.add('search__input--active');if(filterControls){filterControls.classList.add('filter__controls--searching')}}else{searchInput.classList.remove('search__input--active');if(filterControls){filterControls.classList.remove('filter__controls--searching')}}}function updateResultsCount(currentCount,totalCount){let resultsCounter=document.getElementById('results-counter');if(!resultsCounter){resultsCounter=document.createElement('div');resultsCounter.id='results-counter';resultsCounter.className='results-counter';const projectsSection=document.querySelector('.projects');if(projectsSection){const container=projectsSection.querySelector('.container');container.insertBefore(resultsCounter,container.firstChild)}}if(currentCount===totalCount){resultsCounter.style.display='none'}else{resultsCounter.style.display='block';resultsCounter.innerHTML=`<span class="results-counter__text">Showing ${currentCount}of ${totalCount}projects</span>`}}function initProjectInteractions(){document.addEventListener('click',function(event){if(event.target.classList.contains('project__tech-tag')){const tech=event.target.dataset.tech;const filterBtn=document.querySelector(`[data-filter="${tech}"]`);if(filterBtn){filterBtn.click()}}})}function formatDate(dateString){const date=new Date(dateString);return date.toLocaleDateString('en-US',{year: 'numeric',month: 'short'})}function getProjectsByCategory(category){return projectsData.filter(project=>project.category===category)}function getFeaturedProjects(){return projectsData.filter(project=>project.featured)}function getRecentProjects(limit=3){return projectsData .sort((a,b)=>new Date(b.dateCreated)-new Date(a.dateCreated)).slice(0,limit)}function getProjectById(id){return projectsData.find(project=>project.id===id)}function getAllTechnologies(){return [...new Set(projectsData.flatMap(project=>project.technologies))].sort()}document.addEventListener('DOMContentLoaded',function(){initProjects()});window.ProjectsModule={initProjects,renderProjects,filterProjects,searchProjects,getProjectsByCategory,getFeaturedProjects,getRecentProjects,getProjectById,getAllTechnologies,projectsData};function initUrlFiltering(){const urlParams=new URLSearchParams(window.location.search);const filterParam=urlParams.get('filter');const searchParam=urlParams.get('search');if(filterParam&&filterParam!=='all'){const filterBtn=document.querySelector(`[data-filter="${filterParam}"]`);if(filterBtn){filterBtn.click()}}if(searchParam){const searchInput=document.getElementById('project-search');if(searchInput){searchInput.value=searchParam;searchInput.dispatchEvent(new Event('input'))}}}function updateUrl(filter='all',search=''){const url=new URL(window.location);if(filter&&filter!=='all'){url.searchParams.set('filter',filter)}else{url.searchParams.delete('filter')}if(search){url.searchParams.set('search',search)}else{url.searchParams.delete('search')}window.history.replaceState({},'',url)}function initKeyboardShortcuts(){document.addEventListener('keydown',function(event){if(event.target.tagName==='INPUT'||event.target.tagName==='TEXTAREA'){return}if((event.ctrlKey||event.metaKey)&&event.key==='f'){event.preventDefault();const searchInput=document.getElementById('project-search');if(searchInput){searchInput.focus()}}if(event.key>='1'&&event.key<='9'){const filterButtons=document.querySelectorAll('.filter__btn');const index=parseInt(event.key)-1;if(filterButtons[index]){filterButtons[index].click()}}if(event.key==='Escape'){const searchInput=document.getElementById('project-search');if(searchInput&&searchInput.value){searchInput.value='';searchInput.dispatchEvent(new Event('input'))}else{const allButton=document.querySelector('[data-filter="all"]');if(allButton){allButton.click()}}}})}function trackUserInteraction(type,value){if(typeof gtag!=='undefined'){gtag('event','portfolio_interaction',{'interaction_type': type,'interaction_value': value})}console.log(`User interaction: ${type}-${value}`)}function initEnhancedProjectInteractions(){document.addEventListener('click',function(event){if(event.target.classList.contains('project__tech-tag')){const tech=event.target.dataset.tech;const filterBtn=document.querySelector(`[data-filter="${tech}"]`);if(filterBtn){filterBtn.click();trackUserInteraction('tech_tag_click',tech)}}if(event.target.closest('.project__link')){const link=event.target.closest('.project__link');const projectCard=link.closest('.project-card');const projectId=projectCard?.dataset.projectId;const linkType=link.classList.contains('project__link--github')? 'github' : 'live';if(projectId){trackUserInteraction('project_link_click',`${projectId}_${linkType}`)}}if(event.target.classList.contains('filter__btn')){const filter=event.target.dataset.filter;trackUserInteraction('filter_click',filter);updateUrl(filter)}});const searchInput=document.getElementById('project-search');if(searchInput){let searchTimeout;searchInput.addEventListener('input',function(event){clearTimeout(searchTimeout);searchTimeout=setTimeout(()=>{const searchTerm=event.target.value.trim();if(searchTerm){trackUserInteraction('search',searchTerm);updateUrl('all',searchTerm)}else{updateUrl()}},1000)})}}function initEnhancedProjects(){initProjects();initUrlFiltering();initKeyboardShortcuts();initEnhancedProjectInteractions();addKeyboardShortcutsInfo()}function addKeyboardShortcutsInfo(){const shortcutsInfo=document.createElement('div');shortcutsInfo.className='keyboard-shortcuts-info';shortcutsInfo.innerHTML=`<button class="shortcuts-toggle" aria-label="Show keyboard shortcuts"><span class="shortcuts-icon">⌨️</span></button><div class="shortcuts-panel" style="display: none;"><h3>Keyboard Shortcuts</h3><ul><li><kbd>Ctrl/Cmd+F</kbd>-Focus search</li><li><kbd>1-9</kbd>-Quick filter selection</li><li><kbd>Escape</kbd>-Clear search/filters</li></ul></div>`;document.body.appendChild(shortcutsInfo);const toggle=shortcutsInfo.querySelector('.shortcuts-toggle');const panel=shortcutsInfo.querySelector('.shortcuts-panel');toggle.addEventListener('click',function(){const isVisible=panel.style.display!=='none';panel.style.display=isVisible ? 'none' : 'block';toggle.setAttribute('aria-expanded',!isVisible)});document.addEventListener('click',function(event){if(!shortcutsInfo.contains(event.target)){panel.style.display='none';toggle.setAttribute('aria-expanded','false')}})}document.addEventListener('DOMContentLoaded',function(){initEnhancedProjects()});window.ProjectsModule={...window.ProjectsModule,initEnhancedProjects,updateUrl,trackUserInteraction};